"use strict";(self.webpackChunkwebsite_miralis=self.webpackChunkwebsite_miralis||[]).push([[6224],{3576:(t,e,i)=>{i.r(e),i.d(e,{default:()=>w});var s=i(6540),a=i(5260),o=i(781),n=i(1107),l=i(4164),r=i(4851),c=i.n(r);const m={statsContentColumn:"statsContentColumn_jBIQ",graphContainer:"graphContainer_IrMV"};var d=i(4848);const p="https://raw.githubusercontent.com/CharlyCst/miralis-commit-stats/main/stats.csv",h="https://github.com/CharlyCst/miralis/";function u(t){let e;return{hooks:{init:function(i,s,a){let o,n,l=i.over;function r(){e.forEach(((t,e)=>{0!=e&&(t.style.display="none")}))}function c(){e.forEach(((t,e)=>{if(0==e)return;let s=i.series[e];t.style.display=s.show?null:"none"}))}e=s.series.map(((t,e)=>{if(0==e)return;let i=document.createElement("div");return i.className="tooltip",i.textContent="Tooltip!",i.style.pointerEvents="none",i.style.position="absolute",i.style.background="rgba(0,0,0,0.1)",l.appendChild(i),i})),l.addEventListener("mouseleave",(()=>{i.cursor._lock||r()})),l.addEventListener("mouseenter",(()=>{c()})),l.addEventListener("mousedown",(t=>{o=t.clientX,n=t.clientY})),l.addEventListener("mouseup",(e=>{if(e.clientX==o&&e.clientY==n){const e=i.cursor.idx;if(0==e){const i=t.commits[e];window.open(h+"commit/"+i,"_blank").focus()}else{const i=t.commits[e-1],s=t.commits[e];window.open(h+"compare/"+i+".."+s,"_blank").focus()}}})),i.cursor.left<0?r():c()},setCursor:function(i){const s=i.cursor.idx;e.forEach(((e,a)=>{if(0==a)return;let o=i.series[a];if(o.show){let n=i.data[0][s],l=i.data[a][s];const r=t.date[s];e.textContent=r||"",e.style.left=Math.round(i.valToPos(n,"x"))+"px",e.style.top=Math.round(i.valToPos(l,o.scale))+"px"}}))}}}}function y(t){let{title:e,data:i,metric:s,metric_label:a}=t;const o=i.metrics[s];let n=0;for(;n<o.length&&0==o[n];)n++;const r=i.commitIdx.slice(n),p=i.commits.slice(n),h=i.date.slice(n),y=o.slice(n),w={title:e,width:400,height:300,plugins:[u({commitIdx:r,commits:p,date:h,metrics:{...i.metrics,[s]:y}})],series:[{label:"Commit",value:(t,e)=>p[e]?.substring(0,12)},{label:a,points:{show:!0},stroke:"blue"}],axes:[{show:!1},{label:""}],scales:{x:{time:!1}}},f=r,b=y;return(0,d.jsx)(c(),{options:w,data:[f,b],className:(0,l.A)("graph-container",m.graphContainer)})}function w(){const[t,e]=(0,s.useState)({commitIdx:[],commits:[],date:[],metrics:{binSize:[],buildTime:[],firmwareTrapLatency:[],worldSwitchTrapLatency:[],firmwareTrapLatencyProtectPayload:[],worldSwitchTrapLantency:[],misalignedCost:[]}});return(0,s.useEffect)((()=>{fetch(p).then((t=>t.text())).then((t=>{const i=[],s=[],a=[],o=[],n=[];let l=[],r=[],c=[],m=[],d=[];const p=t.split("\n");for(let e=1;e<p.length;e++){const t=p[e].split(",");1!=t.length&&(s.push(e-1),i.push(t[0]),a.push(t[1]),o.push(parseInt(t[2])/1e3),n.push(t[3]),l.push(t[4]),r.push(t[5]),c.push(t[6]),m.push(t[7]),d.push(t[8]))}e({commitIdx:s,commits:i,date:a,metrics:{binSize:o,buildTime:n,firmwareTrapLatency:l,worldSwitchTrapLatency:r,firmwareTrapLatencyProtectPayload:c,worldSwitchTrapLantency:m,misalignedCost:d}})}))}),[]),(0,d.jsxs)(o.A,{title:"Dashboards",description:"Developper dashboard for the Miralis project",children:[(0,d.jsx)(a.A,{children:(0,d.jsx)("meta",{name:"robots",content:"noindex, nofollow"})}),(0,d.jsxs)("div",{className:(0,l.A)("stats-content-column",m.statsContentColumn),children:[(0,d.jsx)(n.A,{as:"h1",children:"Dashboard"}),(0,d.jsx)("p",{children:"This pages displays a developper dashboard with statistics collected from the Miralis main repository. The data is automatically collected by a CI job when pushing new commits on main."}),(0,d.jsx)(y,{title:"Miralis Size (KiB)",data:t,metric:"binSize",metric_label:"Binary size (KiB)"}),(0,d.jsx)(y,{title:"Cold Build Time (s)",data:t,metric:"buildTime",metric_label:"Build time (s)"}),(0,d.jsx)(y,{title:"[No policy] Firmware trap latency",data:t,metric:"firmwareTrapLatency",metric_label:"CPU cycles (spike)"}),(0,d.jsx)(y,{title:"[No policy] World switch latency",data:t,metric:"worldSwitchTrapLatency",metric_label:"CPU cycles (spike)"}),(0,d.jsx)(y,{title:"[Protect payload policy] Firmware trap latency ",data:t,metric:"firmwareTrapLatencyProtectPayload",metric_label:"CPU cycles (spike)"}),(0,d.jsx)(y,{title:"[Protect payload policy] World switch latency",data:t,metric:"worldSwitchTrapLantency",metric_label:"CPU cycles (spike)"}),(0,d.jsx)(y,{title:"Emulation latency of a misaligne operation",data:t,metric:"misalignedCost",metric_label:"CPU cycles (spike)"})]})]})}}}]);